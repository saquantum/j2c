TokenType = Identifier, TokenValue = Map, lineNumber = 1
TokenType = Symbol, TokenValue = <, lineNumber = 1
TokenType = Identifier, TokenValue = Integer, lineNumber = 1
TokenType = Symbol, TokenValue = ,, lineNumber = 1
TokenType = Identifier, TokenValue = ArrayList, lineNumber = 1
TokenType = Symbol, TokenValue = <, lineNumber = 1
TokenType = Identifier, TokenValue = String, lineNumber = 1
TokenType = Symbol, TokenValue = >, lineNumber = 1
TokenType = Symbol, TokenValue = >, lineNumber = 1
TokenType = Identifier, TokenValue = a, lineNumber = 1
TokenType = Symbol, TokenValue = <, lineNumber = 1
TokenType = Symbol, TokenValue = <, lineNumber = 1
TokenType = Identifier, TokenValue = b, lineNumber = 1
TokenType = Symbol, TokenValue = >, lineNumber = 1
TokenType = Symbol, TokenValue = >, lineNumber = 1
TokenType = Identifier, TokenValue = c, lineNumber = 1
--------------
Debug: in expressions only mode.
Rule = testfolder/generics.java, ChildRules: expression, expression, .
Rule = expression, ParentRule = testfolder/generics.java, ChildRules: ternaryExpression, .
Rule = ternaryExpression, ParentRule = expression, ChildRules: logicalOrExpression, .
Rule = logicalOrExpression, ParentRule = ternaryExpression, ChildRules: logicalAndExpression, .
Rule = logicalAndExpression, ParentRule = logicalOrExpression, ChildRules: bitwiseOrExpression, .
Rule = bitwiseOrExpression, ParentRule = logicalAndExpression, ChildRules: bitwiseXorExpression, .
Rule = bitwiseXorExpression, ParentRule = bitwiseOrExpression, ChildRules: bitwiseAndExpression, .
Rule = bitwiseAndExpression, ParentRule = bitwiseXorExpression, ChildRules: equalityExpression, .
Rule = equalityExpression, ParentRule = bitwiseAndExpression, ChildRules: relationalExpression, .
Rule = relationalExpression, ParentRule = equalityExpression, ChildRules: shiftExpression, generics, .
Rule = shiftExpression, ParentRule = relationalExpression, ChildRules: additiveExpression, .
Rule = additiveExpression, ParentRule = shiftExpression, ChildRules: multiplicativeExpression, .
Rule = multiplicativeExpression, ParentRule = additiveExpression, ChildRules: unaryExpression, .
Rule = unaryExpression, ParentRule = multiplicativeExpression, ChildRules: postfixExpression, .
Rule = postfixExpression, ParentRule = unaryExpression, ChildRules: term, .
Rule = term, ParentRule = postfixExpression, ChildRules: identifier, .
TokenType = Identifier, TokenValue = Map, lineNumber = 1, ParentRule = term.
Rule = generics, ParentRule = relationalExpression, ChildRules: symbol, typeArgument, symbol, typeArgument, symbol, .
TokenType = Symbol, TokenValue = <, lineNumber = 1, ParentRule = generics.
Rule = typeArgument, ParentRule = generics, ChildRules: referenceType, .
Rule = referenceType, ParentRule = typeArgument, ChildRules: identifier, .
TokenType = Identifier, TokenValue = Integer, lineNumber = 1, ParentRule = referenceType.
TokenType = Symbol, TokenValue = ,, lineNumber = 1, ParentRule = generics.
Rule = typeArgument, ParentRule = generics, ChildRules: referenceType, .
Rule = referenceType, ParentRule = typeArgument, ChildRules: identifier, generics, .
TokenType = Identifier, TokenValue = ArrayList, lineNumber = 1, ParentRule = referenceType.
Rule = generics, ParentRule = referenceType, ChildRules: symbol, typeArgument, symbol, .
TokenType = Symbol, TokenValue = <, lineNumber = 1, ParentRule = generics.
Rule = typeArgument, ParentRule = generics, ChildRules: referenceType, .
Rule = referenceType, ParentRule = typeArgument, ChildRules: identifier, .
TokenType = Identifier, TokenValue = String, lineNumber = 1, ParentRule = referenceType.
TokenType = Symbol, TokenValue = >, lineNumber = 1, ParentRule = generics.
TokenType = Symbol, TokenValue = >, lineNumber = 1, ParentRule = generics.
Rule = expression, ParentRule = testfolder/generics.java, ChildRules: ternaryExpression, .
Rule = ternaryExpression, ParentRule = expression, ChildRules: logicalOrExpression, .
Rule = logicalOrExpression, ParentRule = ternaryExpression, ChildRules: logicalAndExpression, .
Rule = logicalAndExpression, ParentRule = logicalOrExpression, ChildRules: bitwiseOrExpression, .
Rule = bitwiseOrExpression, ParentRule = logicalAndExpression, ChildRules: bitwiseXorExpression, .
Rule = bitwiseXorExpression, ParentRule = bitwiseOrExpression, ChildRules: bitwiseAndExpression, .
Rule = bitwiseAndExpression, ParentRule = bitwiseXorExpression, ChildRules: equalityExpression, .
Rule = equalityExpression, ParentRule = bitwiseAndExpression, ChildRules: relationalExpression, .
Rule = relationalExpression, ParentRule = equalityExpression, ChildRules: shiftExpression, .
Rule = shiftExpression, ParentRule = relationalExpression, ChildRules: additiveExpression, operator, additiveExpression, operator, additiveExpression, .
Rule = additiveExpression, ParentRule = shiftExpression, ChildRules: multiplicativeExpression, .
Rule = multiplicativeExpression, ParentRule = additiveExpression, ChildRules: unaryExpression, .
Rule = unaryExpression, ParentRule = multiplicativeExpression, ChildRules: postfixExpression, .
Rule = postfixExpression, ParentRule = unaryExpression, ChildRules: term, .
Rule = term, ParentRule = postfixExpression, ChildRules: identifier, .
TokenType = Identifier, TokenValue = a, lineNumber = 1, ParentRule = term.
TokenType = Operator, TokenValue = <<, lineNumber = 1, ParentRule = shiftExpression.
Rule = additiveExpression, ParentRule = shiftExpression, ChildRules: multiplicativeExpression, .
Rule = multiplicativeExpression, ParentRule = additiveExpression, ChildRules: unaryExpression, .
Rule = unaryExpression, ParentRule = multiplicativeExpression, ChildRules: postfixExpression, .
Rule = postfixExpression, ParentRule = unaryExpression, ChildRules: term, .
Rule = term, ParentRule = postfixExpression, ChildRules: identifier, .
TokenType = Identifier, TokenValue = b, lineNumber = 1, ParentRule = term.
TokenType = Operator, TokenValue = >>, lineNumber = 1, ParentRule = shiftExpression.
Rule = additiveExpression, ParentRule = shiftExpression, ChildRules: multiplicativeExpression, .
Rule = multiplicativeExpression, ParentRule = additiveExpression, ChildRules: unaryExpression, .
Rule = unaryExpression, ParentRule = multiplicativeExpression, ChildRules: postfixExpression, .
Rule = postfixExpression, ParentRule = unaryExpression, ChildRules: term, .
Rule = term, ParentRule = postfixExpression, ChildRules: identifier, .
TokenType = Identifier, TokenValue = c, lineNumber = 1, ParentRule = term.
--------------
TokenType = Identifier, TokenValue = Map, lineNumber = 1
TokenType = Symbol, TokenValue = <, lineNumber = 1
TokenType = Identifier, TokenValue = Integer, lineNumber = 1
TokenType = Symbol, TokenValue = ,, lineNumber = 1
TokenType = Identifier, TokenValue = ArrayList, lineNumber = 1
TokenType = Symbol, TokenValue = <, lineNumber = 1
TokenType = Identifier, TokenValue = String, lineNumber = 1
TokenType = Symbol, TokenValue = >, lineNumber = 1
TokenType = Symbol, TokenValue = >, lineNumber = 1
TokenType = Identifier, TokenValue = a, lineNumber = 1
TokenType = Operator, TokenValue = <<, lineNumber = 1
TokenType = Identifier, TokenValue = b, lineNumber = 1
TokenType = Operator, TokenValue = >>, lineNumber = 1
TokenType = Identifier, TokenValue = c, lineNumber = 1
--------------
