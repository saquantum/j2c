Debug: in expressions only mode.
Rule = testfolder/expressions.java, ChildRules: expression, .
Rule = expression, ParentRule = testfolder/expressions.java, ChildRules: ternaryExpression, .
Rule = ternaryExpression, ParentRule = expression, ChildRules: logicalOrExpression, .
Rule = logicalOrExpression, ParentRule = ternaryExpression, ChildRules: logicalAndExpression, .
Rule = logicalAndExpression, ParentRule = logicalOrExpression, ChildRules: bitwiseOrExpression, .
Rule = bitwiseOrExpression, ParentRule = logicalAndExpression, ChildRules: bitwiseXorExpression, .
Rule = bitwiseXorExpression, ParentRule = bitwiseOrExpression, ChildRules: bitwiseAndExpression, .
Rule = bitwiseAndExpression, ParentRule = bitwiseXorExpression, ChildRules: equalityExpression, .
Rule = equalityExpression, ParentRule = bitwiseAndExpression, ChildRules: relationalExpression, .
Rule = relationalExpression, ParentRule = equalityExpression, ChildRules: shiftExpression, .
Rule = shiftExpression, ParentRule = relationalExpression, ChildRules: additiveExpression, .
Rule = additiveExpression, ParentRule = shiftExpression, ChildRules: multiplicativeExpression, .
Rule = multiplicativeExpression, ParentRule = additiveExpression, ChildRules: unaryExpression, .
Rule = unaryExpression, ParentRule = multiplicativeExpression, ChildRules: postfixExpression, .
Rule = postfixExpression, ParentRule = unaryExpression, ChildRules: term, .
Rule = term, ParentRule = postfixExpression, ChildRules: identifier, fieldAccess, fieldAccess, subroutineCall, fieldAccess, arrayAccess, fieldAccess, subroutineCall, .
TokenType = Identifier, TokenValue = obj, lineNumber = 1, ParentRule = term.
Rule = fieldAccess, ParentRule = term, ChildRules: symbol, identifier, .
TokenType = Symbol, TokenValue = ., lineNumber = 1, ParentRule = fieldAccess.
TokenType = Identifier, TokenValue = field1, lineNumber = 1, ParentRule = fieldAccess.
Rule = fieldAccess, ParentRule = term, ChildRules: symbol, identifier, .
TokenType = Symbol, TokenValue = ., lineNumber = 1, ParentRule = fieldAccess.
TokenType = Identifier, TokenValue = method1, lineNumber = 1, ParentRule = fieldAccess.
Rule = subroutineCall, ParentRule = term, ChildRules: bracket, expressionList, bracket, .
TokenType = Bracket, TokenValue = (, lineNumber = 1, ParentRule = subroutineCall.
Rule = expressionList, ParentRule = subroutineCall.
TokenType = Bracket, TokenValue = ), lineNumber = 1, ParentRule = subroutineCall.
Rule = fieldAccess, ParentRule = term, ChildRules: symbol, identifier, .
TokenType = Symbol, TokenValue = ., lineNumber = 1, ParentRule = fieldAccess.
TokenType = Identifier, TokenValue = field2, lineNumber = 1, ParentRule = fieldAccess.
Rule = arrayAccess, ParentRule = term, ChildRules: bracket, expression, bracket, .
TokenType = Bracket, TokenValue = [, lineNumber = 1, ParentRule = arrayAccess.
Rule = expression, ParentRule = arrayAccess, ChildRules: ternaryExpression, .
Rule = ternaryExpression, ParentRule = expression, ChildRules: logicalOrExpression, .
Rule = logicalOrExpression, ParentRule = ternaryExpression, ChildRules: logicalAndExpression, .
Rule = logicalAndExpression, ParentRule = logicalOrExpression, ChildRules: bitwiseOrExpression, .
Rule = bitwiseOrExpression, ParentRule = logicalAndExpression, ChildRules: bitwiseXorExpression, .
Rule = bitwiseXorExpression, ParentRule = bitwiseOrExpression, ChildRules: bitwiseAndExpression, .
Rule = bitwiseAndExpression, ParentRule = bitwiseXorExpression, ChildRules: equalityExpression, .
Rule = equalityExpression, ParentRule = bitwiseAndExpression, ChildRules: relationalExpression, .
Rule = relationalExpression, ParentRule = equalityExpression, ChildRules: shiftExpression, .
Rule = shiftExpression, ParentRule = relationalExpression, ChildRules: additiveExpression, .
Rule = additiveExpression, ParentRule = shiftExpression, ChildRules: multiplicativeExpression, .
Rule = multiplicativeExpression, ParentRule = additiveExpression, ChildRules: unaryExpression, .
Rule = unaryExpression, ParentRule = multiplicativeExpression, ChildRules: postfixExpression, .
Rule = postfixExpression, ParentRule = unaryExpression, ChildRules: term, .
Rule = term, ParentRule = postfixExpression, ChildRules: number, .
TokenType = Number, TokenValue = 3, lineNumber = 1, ParentRule = term.
TokenType = Bracket, TokenValue = ], lineNumber = 1, ParentRule = arrayAccess.
Rule = fieldAccess, ParentRule = term, ChildRules: symbol, identifier, .
TokenType = Symbol, TokenValue = ., lineNumber = 1, ParentRule = fieldAccess.
TokenType = Identifier, TokenValue = method2, lineNumber = 1, ParentRule = fieldAccess.
Rule = subroutineCall, ParentRule = term, ChildRules: bracket, expressionList, bracket, .
TokenType = Bracket, TokenValue = (, lineNumber = 1, ParentRule = subroutineCall.
Rule = expressionList, ParentRule = subroutineCall, ChildRules: expression, symbol, expression, symbol, expression, .
Rule = expression, ParentRule = expressionList, ChildRules: ternaryExpression, .
Rule = ternaryExpression, ParentRule = expression, ChildRules: logicalOrExpression, .
Rule = logicalOrExpression, ParentRule = ternaryExpression, ChildRules: logicalAndExpression, .
Rule = logicalAndExpression, ParentRule = logicalOrExpression, ChildRules: bitwiseOrExpression, .
Rule = bitwiseOrExpression, ParentRule = logicalAndExpression, ChildRules: bitwiseXorExpression, .
Rule = bitwiseXorExpression, ParentRule = bitwiseOrExpression, ChildRules: bitwiseAndExpression, .
Rule = bitwiseAndExpression, ParentRule = bitwiseXorExpression, ChildRules: equalityExpression, .
Rule = equalityExpression, ParentRule = bitwiseAndExpression, ChildRules: relationalExpression, .
Rule = relationalExpression, ParentRule = equalityExpression, ChildRules: shiftExpression, .
Rule = shiftExpression, ParentRule = relationalExpression, ChildRules: additiveExpression, .
Rule = additiveExpression, ParentRule = shiftExpression, ChildRules: multiplicativeExpression, .
Rule = multiplicativeExpression, ParentRule = additiveExpression, ChildRules: unaryExpression, .
Rule = unaryExpression, ParentRule = multiplicativeExpression, ChildRules: postfixExpression, .
Rule = postfixExpression, ParentRule = unaryExpression, ChildRules: term, .
Rule = term, ParentRule = postfixExpression, ChildRules: identifier, .
TokenType = Identifier, TokenValue = a, lineNumber = 1, ParentRule = term.
TokenType = Symbol, TokenValue = ,, lineNumber = 1, ParentRule = expressionList.
Rule = expression, ParentRule = expressionList, ChildRules: ternaryExpression, .
Rule = ternaryExpression, ParentRule = expression, ChildRules: logicalOrExpression, .
Rule = logicalOrExpression, ParentRule = ternaryExpression, ChildRules: logicalAndExpression, .
Rule = logicalAndExpression, ParentRule = logicalOrExpression, ChildRules: bitwiseOrExpression, .
Rule = bitwiseOrExpression, ParentRule = logicalAndExpression, ChildRules: bitwiseXorExpression, .
Rule = bitwiseXorExpression, ParentRule = bitwiseOrExpression, ChildRules: bitwiseAndExpression, .
Rule = bitwiseAndExpression, ParentRule = bitwiseXorExpression, ChildRules: equalityExpression, .
Rule = equalityExpression, ParentRule = bitwiseAndExpression, ChildRules: relationalExpression, .
Rule = relationalExpression, ParentRule = equalityExpression, ChildRules: shiftExpression, .
Rule = shiftExpression, ParentRule = relationalExpression, ChildRules: additiveExpression, .
Rule = additiveExpression, ParentRule = shiftExpression, ChildRules: multiplicativeExpression, .
Rule = multiplicativeExpression, ParentRule = additiveExpression, ChildRules: unaryExpression, .
Rule = unaryExpression, ParentRule = multiplicativeExpression, ChildRules: postfixExpression, .
Rule = postfixExpression, ParentRule = unaryExpression, ChildRules: term, .
Rule = term, ParentRule = postfixExpression, ChildRules: number, .
TokenType = Number, TokenValue = 10, lineNumber = 1, ParentRule = term.
TokenType = Symbol, TokenValue = ,, lineNumber = 1, ParentRule = expressionList.
Rule = expression, ParentRule = expressionList, ChildRules: ternaryExpression, .
Rule = ternaryExpression, ParentRule = expression, ChildRules: logicalOrExpression, .
Rule = logicalOrExpression, ParentRule = ternaryExpression, ChildRules: logicalAndExpression, .
Rule = logicalAndExpression, ParentRule = logicalOrExpression, ChildRules: bitwiseOrExpression, .
Rule = bitwiseOrExpression, ParentRule = logicalAndExpression, ChildRules: bitwiseXorExpression, .
Rule = bitwiseXorExpression, ParentRule = bitwiseOrExpression, ChildRules: bitwiseAndExpression, .
Rule = bitwiseAndExpression, ParentRule = bitwiseXorExpression, ChildRules: equalityExpression, .
Rule = equalityExpression, ParentRule = bitwiseAndExpression, ChildRules: relationalExpression, .
Rule = relationalExpression, ParentRule = equalityExpression, ChildRules: shiftExpression, .
Rule = shiftExpression, ParentRule = relationalExpression, ChildRules: additiveExpression, .
Rule = additiveExpression, ParentRule = shiftExpression, ChildRules: multiplicativeExpression, .
Rule = multiplicativeExpression, ParentRule = additiveExpression, ChildRules: unaryExpression, .
Rule = unaryExpression, ParentRule = multiplicativeExpression, ChildRules: postfixExpression, .
Rule = postfixExpression, ParentRule = unaryExpression, ChildRules: term, .
Rule = term, ParentRule = postfixExpression, ChildRules: string, .
TokenType = String, TokenValue = "abc", lineNumber = 1, ParentRule = term.
TokenType = Bracket, TokenValue = ), lineNumber = 1, ParentRule = subroutineCall.
